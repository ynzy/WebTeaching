@charset "utf=8";
@import "text.css";

/* 一、通用选择器还匹配到了和body */
/* *{
    border:1px solid red;
} */

/* p{
    color: red;
} */

/* #abc{
    color: rosybrown;
}

.abc{
    color: saddlebrown;
}

b.abc{
    color: seagreen;

} */

/* .abc{
    color: seagreen;
}

.def{
    font-size: 30px;
}

/* 二、属性选择器 css2*/
/* [href]{
    color: slategrey;
}  */

/* [type="password"]{
    border:1px solid royalblue;
} */

/* 属性选择器 cs3*/
/* 属性值开头匹配的属性选择器 ^ */
/* [href^="http"] {
    color: salmon;
} */
/* 匹配到结尾  $ */
/* [href$=".cn"]{
    color:royalblue
} */

/* 属性值包含指定字符的属性选择器(模糊查询用的少，效率低) *  */
/* [href*="baidu"] {
    font-size: 50px;;
} */

/* [class~="def"] {
    color: royalblue;
} */

/* 属性值包含指定字符的属性选择器(精确查找)  | */
/* [lang|="en"]{
    color: salmon;
} */

/* 三、复合选择器 */
/* 1、分组选择器 , */
/* p,b,i,span {
    color: salmon;
} */

/* 混合分组选择器  , */
/* #abc,.abc,i,span {
    color: red;
} */

/* 2、后代选择器,派生选择器，不在乎b的层次  空格 */
/* p b {
    color: salmon;
} */

/* ul li {
    border:1px solid royalblue;
} */

/* 3、子选择器 在乎b的层次  >  */
/* p > span > b {
    color: seagreen;
} */

/* ul > li >  ol > li {
    border: 1px solid darkcyan;
} */

/* 相邻兄弟选择器 匹配和第一个元素相邻的第二个元素 即b  + */
/* p + b {
    color: darkgoldenrod;
} */

/* 普通兄弟选择器 匹配到后面的所有元素 css3 */
/* p ~ b {
    font-size: 40px;
} */

/* 四、伪元素选择器 在css3中伪元素前面 ::       伪类前面 : */
/* 1、块级首行选择器 ::first-line */
/* ::first-line {
    color:red
} */

/* 2、块级首行首个单词 ::first-letter ，span无效*/
/* ::first-letter {
    font-size: 30px;
} */

/* 3、文本前插入 ::brfore 配合content属性 */
/* a::before {
    content:'点击';
} */

/* 4、文本后插入 ::after 配合content 属性 */
/* a::after {
    content: '搜索';
} */

/* 伪类选择器 */
/* 一、结构性伪类选择器：根据元素在文档中的位置选择元素，伪类都需要选择前置选择器来确实能够范围，前缀一般为: */
/* 1、根元素选择器 */
/* :root {
    border:1px solid red;
} */

/* 2、第一个子元素选择器 */
/* ul > li:first-child {
    color: red;

} */

/* 3、最后一个子元素 */
/* ul > li:last-child {
    color: red;
} */
/* 4、选择唯一一个子元素 */
/* ul > li:only-child {
    color:red;
} */

/* 5、选择只有一个指定类型的子元素的那个子元素   注意*/
/* div > p:only-of-type{
    color: red;
} */

/* 选择子元素的第二个元素  有疑问 */
/* ul > li:nth-child(2){
    color: red;
} */

/* 选择子元素的倒数第二个元素 */
/* ul > li:nth-last-child(2){
    color:red;
} */
/* 选择特定子元素的第二个子元素 */
/* div > p:nth-of-type(2){
    color: red;
} */

/* 选择指定类型的倒数第二个子元素 */
/* div > p:nth-last-of-type(1){
    color: red;
} */

/* 二、ui伪类选择器：根据元素的状态匹配元素 */
/* 选择启用状态的元素 */
/* input:enabled {
    border:1px solid red;
}

input:disabled {
    border:1px solid springgreen;
} */

/* 是否勾选input元素 复选框*/
/* input:checked {
    display:none;
} */

/* 从一组元素中选择默认状态 */
/* input:default{
    display: none;
} */

/* 验证合法的时候显示 */
/* input:valid {
    border: 1px solid green;
}

input:invalid {
    border: 1px solid red;
} */

/* 必填 */
/* input:required {
    border: 1px solid red;
} */
/* 不必填 */
/* input:optional {
    border: 1px solid green;
} */

/* 三、动态伪类选择器 对超链接 */
/* 没访问过默认情况下 */
a:link {
    font-size: 30px;
    color: red;
}

/* 访问过 */
/* a:visited {
     color:blue;
 } */
/* 鼠标放上去 悬停 访问过就失效 */
/* a:hover {
    color: orange;
} */

/* 鼠标点上去不松手 访问过就失效 */
/* a:active {
    color:green;
} */
/* 获得焦点(光标)时 对文本框 */
/* input:focus {
    border: 10px  solid  rosybrown;
} */

/* 四、其他伪类选择器 */
/* 否定选择器 ，反选 */
/* a:not([href*="baidu"]){
    color:red;
} */

/* 匹配没有任何元素的内容 */
/* p:empty {
    display: ;
} */

/* p:lang(en-us){
    color:red;
} */

/* 定位到锚点的时候，选择此元素 */
/* b:target{
    color: red;

} */

/* 伪元素选择器 ，当光标选择文字时触发 火狐不支持 */
/* ::selection{
    color: red;
} */

/* rgb(r,g,b) 十进制 */
/* p{
color:rgb(0,128,128);
} */

/* rgba(r,g,b,a)a 是透明度0~1之间 */
/* p{
    color:rgba(0,128,128,0.1);
    font-size: 40px;
    } */

/* hsl 色相饱和度 */
/* p{
    color:hsl(120,100%,30%);
    font-size: 40px;
    } */
/* hsla 色相饱和度透明度 */
/* p{
    color:hsla(120,100%,30%,0.1);
    font-size: 40px;
    } */

/* 相对单位 */
/* em    是字号的三倍  */
/* body{
    width: 200px;
    font-size: 50px;;
} */
/* p {
    color: hsl(120, 100%, 30%);
    font-size: 50px;
    margin: 0;
    padding: 0;
    background: red;
    height: 3em;
    width: 50%;
} */

/* %  所在区块的宽度.父元素的宽度*/
/* p {
    color: hsl(120, 100%, 30%);
    font-size: 50px;
    margin: 0;
    padding: 0;
    background: red;
    width: 50%;
    font-size: 200%;
} */

/* 数字+px,可以精确的微调 */
/* p {
    font-size: 50px;
} */

/* 设置一个从小到大 */
/* p {
    font-size: xx-large;
} */

/* 相对父元素字体的大小 smaller */
body {
    font-size: 50px;
    font-variant: small-caps;
}
/* p {
    font-size:smaller; 
} */ 

/* 将字体设置小型大写的html */
/* p {
    font-variant:small-caps;
} */

/* 将字体设置小型大写的html恢复成正常状态 */
p {
    font-variant:normal;
}